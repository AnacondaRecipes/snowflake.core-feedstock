{% set name = "snowflake.core" %}
{% set version = "1.5.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('.', '_') }}-{{ version }}.tar.gz
  sha256: c042c69c0cc95485898379b6c3ca4a236664908a56f4f688a415e7683e661a78

build:
  # allows SF to rebuild the package as needed without incurring a
  # higher build number than the package we release
  number: 100
  skip: true  # [py<39]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv

requirements:
  host:
    - python
    - hatchling
    - pip
  run:
    - python
    - pydantic >=2
    - python-dateutil >=2.8.2
    - requests
    - snowflake-connector-python
    - pyyaml
    - urllib3
  run_constrained:
    - snowflake-snowpark-python >=1.5.0,<2.0.0

test:
  imports:
    - snowflake.core
  source_files:
    - tests
  commands:
    - pip check
    # 1. do not test tests/integ because
    #    we do not have CONNECTION_PARAMETERS set
    # 2. tests/unit/test_common.py rely on paths relative to the test source file location
    #    PROJECT_SRC = Path(__file__).parent.parent.parent / "src" / "snowflake" / "core"
    # 3. test_drop unstable on windows
    - pytest tests/unit -m "not snowpark" --ignore=tests/unit/test_common.py -k "not test_drop"
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
  requires:
    - pip
    - pytest

about:
  home: https://pypi.org/project/snowflake.core
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Snowflake Python API for Resource Management
  description: Snowflake Python API for Resource Management
  doc_url: https://docs.snowflake.com/developer-guide/snowflake-python-api/snowflake-python-overview
  dev_url: https://pypi.org/project/snowflake.core

extra:
  recipe-maintainers:
    - lorepirri
